{"version":3,"sources":["pics/barnlogo.jpg","home.js","pics/Foodmenu.jpg","pics/icecreammenu.jpg","pics/morefood.jpg","about.js","APIpage.js","Cart.js","IcecreamFlavor.js","IcecreamTypes.js","IcecreamToppings.js","IcecreamSize.js","Navbar.js","Login.js","Signup.js","Smoothie.js","QRCode.js","Adminpg.js","Router.js","App.js","reportWebVitals.js","rootReducer.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","backgroundColor","red","color","nonroot","brown","Home","history","useHistory","classes","toke","localStorage","getItem","style","textAlign","height","width","src","barnlogo","alt","Button","className","variant","onClick","push","disabled","About","barnmenu","barncream","barnfish","BASE_API_URL","process","REACT_APP_BASE_URL","APIpage","logininfo","axios","post","result","data","userinfo","token","patch","username","signupinfo","console","log","get","orders","orderitems","vals","CurrCart","cart","useSelector","store","dispatch","useDispatch","useState","userid","setuserid","useEffect","a","getUser","realid","id","getPerson","getToppings","x","str","c","makeqrcode","length","characters","charactersLength","i","charAt","Math","floor","random","rmItem","obj","type","checkoutprice","t","price","Object","is","parseFloat","topprice","NaN","map","border","flavor","size","amount","shippingPreference","onSuccess","details","alert","item","newObj","qr","total","order","qrcode","totalcost","fk_customerid","addOrder","addOrderItems","onError","err","options","clientId","MaroonRadio","withStyles","checked","props","Radio","IcecreamFlavor","flavortown","value","setValue","milkshakef","Menu","icecream","milkshake","entries","FormControl","component","FormLabel","RadioGroup","aria-label","name","onChange","event","target","FormControlLabel","control","label","radios","document","getElementsByName","f","thing","flavors","IcecreamTypes","typearr","types","IcecreamToppings","toppingarr","state","setState","toppings","cones","handleChange","Checkbox","checkedB","top","checkboxes","n","flurry","toppingarr2","sundae","normal","toppings2","checkbox","checkedA","checkotherboxes","j","IcecreamSize","sizearr","sizes","milkshakes","conesdishes","flurries","sundays","bananasun","whatsize","s","flexGrow","menuButton","marginRight","title","barColor","HomeIcon","SvgIcon","d","ButtonAppBar","AppBar","position","Toolbar","IconButton","edge","fontSize","Typography","clear","window","location","reload","Login","getFormData","initialState","password","formText","setformText","e","noValidate","autoComplete","onSubmit","preventDefault","TextField","Signup","signup","firstName","lastName","email","Smoothie","smoothie","fruit","tprice","QRcode","getQRCodeEmail","sendQRemail","Adminpg","setOrder","getOrders","bulkorders","orderitemid","firstname","lastname","topping1","topping2","topping3","topping4","topping5","topping6","markDone","takeOff","Router","setUserinfo","logobj","register","reg","setItem","exact","path","login","Cart","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","admin","totalprice","rootReducer","action","Array","isArray","arraytoObj","sizeprice","prevVal","newtoppingprice","v","randnum","filter","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8aaec23a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/barnlogo.b6c14ede.jpg\";","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport red from '@material-ui/core/colors/red';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport barnlogo from './pics/barnlogo.jpg';\r\nimport './Global.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      '&:hover': {\r\n        backgroundColor: red[500],\r\n        color: '#FFF'\r\n      },\r\n      margin:'20px',\r\n      backgroundColor: red[900]\r\n    },\r\n    nonroot:{\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        '&:hover': {\r\n          backgroundColor: brown[500],\r\n          color: '#FFF'\r\n        },\r\n        backgroundColor: brown[700]\r\n    }\r\n  }));\r\n\r\n//have it so they cant click order food buttons unless they're logged in\r\nconst Home=()=>{\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    let toke = localStorage.getItem('_token');\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <h1>Welcome to </h1> <br />\r\n            <img style={{height:'300px', width:'300px'}}src ={barnlogo} alt=\"logo\" />\r\n            {/* <img src =\"/pics/barnlogo.jpg\" /> */}\r\n            <h4>Here you can view and order online</h4> <br />\r\n            <p><b>After making a cart and finishing the order we will send you a code that you can redeem at The Barn</b></p>\r\n            <p><b>This will make your order faster so you can avoid lines and have less contact during this pandemic</b></p>\r\n            {toke ?\r\n            <div>\r\n              <Button className={classes.root} variant=\"contained\" color=\"secondary\" onClick={()=>history.push('/food')} disabled>Order Food</Button>\r\n              <Button className={classes.root} variant=\"contained\" color=\"secondary\" onClick={()=>history.push('/icecreamtype')}>Order Ice Cream</Button>\r\n              <Button className={classes.root} variant=\"contained\" color=\"secondary\" onClick={()=>history.push('/smoothie')}>Order Smoothie</Button> <br />\r\n              <Button className={classes.nonroot} variant=\"contained\" color=\"primary\" onClick={()=>history.push('/about')}>About</Button>\r\n            </div>\r\n            :\r\n            <div>\r\n              <Button className={classes.nonroot} variant=\"contained\" color=\"primary\" onClick={()=>history.push('/about')}>About</Button>\r\n              <br />\r\n              <p>New to the barn? Sign up here!</p>\r\n              <Button className={classes.nonroot} variant=\"contained\" color=\"primary\" onClick={()=>history.push('/signup')}>Sign up</Button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/Foodmenu.ed081efe.jpg\";","export default __webpack_public_path__ + \"static/media/icecreammenu.f389a153.jpg\";","export default __webpack_public_path__ + \"static/media/morefood.b34ee64c.jpg\";","import React from 'react';\r\nimport barnmenu from './pics/Foodmenu.jpg';\r\nimport barncream from './pics/icecreammenu.jpg';\r\nimport barnfish from './pics/morefood.jpg';\r\n\r\nconst About=()=>\r\n{\r\n  \r\n  return (\r\n    <div>\r\n        <h2>What is the Barn? Why is it called the Barn?</h2> <br />\r\n        <p>\r\n        This is an authentic 1800's barn. It was built between 1866 and 1898 on an pathway\r\n        between the Old\r\n        Gris Mill and Main St.\r\n        The pathway was later\r\n        named Mallery St.\r\n        The Barn is\r\n        at 8 Mallery St.\r\n        in Corinth, NY.\r\n        <br />\r\n        We have renovated it\r\n        into a very unique\r\n        Soft Ice Cream Shop and Eatery\r\n        </p>\r\n        <h5>What We have to offer</h5>\r\n        <ul>\r\n          <li>Great ice cream and food</li>\r\n          <li>Live Music Nights (most) Wednesday's and Saturday's featuring different local bands</li>\r\n          <li>Safe clean comforable outdoor seating</li>\r\n        </ul>\r\n        <img src = {barnmenu} width='400px' height='600px' alt=\"foodmenupic\" />\r\n        <img src = {barncream} width='400px' height='600px' alt=\"icecreammenupic\" />\r\n        <img src = {barnfish} width='400px' height='600px' alt=\"newfoodmenupic\" />\r\n        <p>Adress: 8 Mallery St, Corinth, NY 12822</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import axios from \"axios\";\r\n\r\nconst BASE_API_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n//const BASE_API_URL = \"http://localhost:3001\";\r\n//all the api backend requests\r\nclass APIpage {\r\n    static async login(logininfo) {\r\n        const result = await axios.post(`${BASE_API_URL}/auth/login`, logininfo);\r\n        return result.data;\r\n    }\r\n\r\n    static async updateUser(userinfo) {\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.patch(`${BASE_API_URL}/users/${userinfo.username}?_token=${token}`, userinfo);\r\n        return result.data;\r\n    }\r\n\r\n    static async register(signupinfo) {\r\n        console.log(signupinfo);\r\n        const result = await axios.post(`${BASE_API_URL}/users`, signupinfo);\r\n        return result.data;\r\n    }\r\n\r\n    static async getUser(){\r\n        let token = localStorage.getItem('_token')\r\n        const result = await axios.get(`${BASE_API_URL}/users/singleuser?_token=${token}`);\r\n        return result.data;\r\n    }\r\n\r\n    static async addOrder(orders) {\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.post(`${BASE_API_URL}/orders/addOrder?_token=${token}`, orders);\r\n        return result.data;\r\n    }\r\n\r\n    static async addOrderItems(orderitems) {\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.post(`${BASE_API_URL}/orders/addOrderItems?_token=${token}`, orderitems);\r\n        return result.data;\r\n    }\r\n\r\n    static async getQR(){\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.get(`${BASE_API_URL}/orders/getQRcode?_token=${token}`);\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    static async getQRCodeEmail(){\r\n        let token = localStorage.getItem('_token');\r\n        const noresturn = await axios.post(`${BASE_API_URL}/orders/sendQRemail?_token=${token}`);\r\n        return null;\r\n    }\r\n\r\n    static async getOrders(){\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.get(`${BASE_API_URL}/orders/undoneorders?_token=${token}`);\r\n        console.log(result.data);\r\n        return result.data;\r\n    }\r\n\r\n    static async markDone(vals){\r\n        let token = localStorage.getItem('_token');\r\n        const result = await axios.patch(`${BASE_API_URL}/orders/finishorder?_token=${token}`, vals);\r\n        return result.data;\r\n    }\r\n\r\n}\r\n\r\nexport default APIpage;\r\n","//will show all the items in your cart and let you remove them\r\n\r\nimport React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport APIpage from './APIpage';\r\n\r\nconst CurrCart=()=>{\r\n    const cart = useSelector(store => store.cart);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    console.log(cart);\r\n\r\n    const [userid,setuserid] = useState(\"\");\r\n    useEffect(() => {\r\n        async function getPerson() {\r\n            let userid = await APIpage.getUser(); //Should return {id: some number}\r\n            let realid = userid.id\r\n            console.log(realid)\r\n            setuserid(realid);\r\n        }\r\n        getPerson();\r\n    }, []);\r\n    const getToppings=(x)=>{\r\n        let str = \"\";\r\n        for(let c=0;c<10;c++)\r\n        {\r\n            if(x[c]==null){\r\n                return str;\r\n            }\r\n            if(x[c+1]==null){\r\n                str+=`${x[c]}`;\r\n            }else{\r\n                str+=`${x[c]}, `;\r\n            }\r\n        }\r\n    }\r\n\r\n    //This will clear up the car so we can send it to our db happily\r\n    const formatCart=()=>{\r\n        return cart.map(function(item) {\r\n            // create a new object to store full name.\r\n            let newObj = {};\r\n            newObj[\"type\"] = item.type;\r\n            newObj['flavor']=item.flavor;\r\n            newObj['size'] = item.size;\r\n            newObj['topping1']=item['0'] || '';\r\n            newObj['topping2']=item['1'] || '';\r\n            newObj['topping3']=item['2'] || '';\r\n            newObj['topping4']=item['3'] || '';\r\n            newObj['topping5']=item['4'] || '';\r\n            newObj['topping6']=item['5'] || '';\r\n\r\n            // return our new object.\r\n            return newObj;\r\n          });\r\n    }\r\n\r\n    //generate random string that will be turned into a qrcode\r\n    const makeqrcode=(length)=>{\r\n        var result           = '';\r\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for ( var i = 0; i < length; i++ ) {\r\n           result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n     }\r\n\r\n    //removing an item from cart\r\n    const rmItem=(obj)=>{\r\n        let id = obj.x.id;\r\n        dispatch({type:'DELETE_CART_ITEM', id });\r\n    }\r\n\r\n    const checkoutprice =()=>{\r\n        if(cart.length == 0){\r\n                return 0;\r\n        }\r\n        let t = 0;\r\n        for(let price =0;price<cart.length;price++)\r\n        {\r\n            //if there are no topping only add the base price\r\n            if(Object.is(parseFloat(cart[price].topprice), NaN)){\r\n                t+=parseFloat(cart[price].price);\r\n                continue;\r\n            }\r\n            console.log(cart[price].price);\r\n            console.log(cart[price].topprice);\r\n            //otherwise add the base price plus each topping added\r\n            t+=parseFloat(cart[price].price) + parseFloat(cart[price].topprice);\r\n        }\r\n        console.log(t);\r\n        return t;\r\n        \r\n    }\r\n    \r\n    //Nested tenary operator expample if needed\r\n    //var icon = (area == 1) ? icon1 : (area == 2) ? icon2 : icon0;\r\n    return (\r\n        <div>\r\n            {cart.map(x=> \r\n                <div id = {x.id} style={{border: '1px solid', margin:'5px', height:'270px',width:'450px'}}> \r\n                    {x.type=='smoothie' ? \r\n                    <div>\r\n                        <h3>Smoothie</h3>\r\n                        <p>{x.flavor}</p>\r\n                        <p><b>PRICE:</b> <div className=\"cost\">{x.price}</div></p>\r\n                        <button onClick={()=>rmItem({x})}>Remove Item</button>\r\n                        <br />\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    <h3>{x.type}</h3>\r\n                    <p>{x.flavor}</p>\r\n                    <p>{x.size}</p>\r\n                    <p><b>PRICE:</b> <div className=\"cost\">{x.price+x.topprice}</div></p>\r\n                    <p>{getToppings(x)}</p>\r\n                    <button onClick={()=>rmItem({x})}>Remove Item</button><br />\r\n                    </div>\r\n                    }\r\n                </div>)\r\n            }\r\n            <p>Your total so far: {checkoutprice()} </p>\r\n            <button onClick={()=>history.push('/')}>Add Another Item</button>\r\n            <br /><br /><br />\r\n            <PayPalButton\r\n                amount={checkoutprice()}\r\n                shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n                onSuccess={async (details, data) => {\r\n                    //alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n                    alert(\"Thank-you for your order, press OK to proceed\");\r\n                    //add cart json to db, generate a QRCode the references that order\r\n                    //empty the cart\r\n                    let orderitems = formatCart();\r\n                    let qr = makeqrcode(15);\r\n                    let total = checkoutprice();\r\n                    \r\n                    let order = {qrcode: qr, totalcost:total, fk_customerid: userid}\r\n                    console.log(order);\r\n                    console.log(orderitems);\r\n                    await APIpage.addOrder(order);\r\n                    await APIpage.addOrderItems(orderitems);\r\n\r\n                    dispatch({type:'DELETE_CART' });\r\n                    history.push('/qrcode');\r\n\r\n\r\n                    // OPTIONAL: Call your server to save the transaction comment out for now\r\n                    // return fetch(\"/paypal-transaction-complete\", {\r\n                    //     method: \"post\",\r\n                    //     body: JSON.stringify({\r\n                    //         orderID: data.orderID\r\n                    //     })\r\n                    // });\r\n                }}\r\n                onError={(err) => {\r\n                    alert('There was a problem with the info you provided');\r\n                    console.log(err);\r\n                }}\r\n                options={{\r\n                    clientId: \"AeMpbvZc9eDS9FBfBxNY8F0_9OsL3ZV7lLDcHmyKG6UpN5ulMyBZiDbV48EM3pyQ3-WH3vqVLSMK8yjW\"\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n//https://www.npmjs.com/package/react-paypal-button-v2\r\n//https://luehangs.site/lue_hang/projects/react-paypal-button-v2#usage-example\r\nexport default CurrCart;","import React,{useState} from 'react';\r\nimport Menu from './Menu.json';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst MaroonRadio = withStyles({\r\n    root: {\r\n      color: \"black\",\r\n      '&$checked': {\r\n        color: red[900],\r\n      },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst IcecreamFlavor=()=>{\r\n    let flavortown = [];\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState('vanilla');\r\n    const order = useSelector(store => store.order);\r\n\r\n    if(order[0].type === 'Milkshake')\r\n    {\r\n        const milkshakef = Menu.icecream[3].milkshake;\r\n        console.log(milkshakef)\r\n        console.log(Menu.icecream)\r\n        Object.entries(milkshakef).map(([key,value])=>{\r\n            flavortown.push(value);\r\n        })\r\n    \r\n        const handleChange = (event) => {\r\n            setValue(event.target.value);\r\n        };\r\n    \r\n        const addmflavor=()=>{\r\n            let radios = document.getElementsByName('milkflavor');\r\n            for (var i = 0, length = radios.length; i < length; i++) {\r\n                if (radios[i].checked) {\r\n                    // do whatever you want with the checked radio\r\n                    let f = radios[i].value;\r\n                    let thing = {flavor: f}\r\n                    dispatch({type:'ADD_ORDER', thing });\r\n                    dispatch({type:'ADD_CART' });\r\n                    dispatch({type:'CLEAR_ORDER'});\r\n    \r\n                    // only one radio can be logically checked, don't check the rest\r\n                    break;\r\n                }\r\n            }\r\n            history.push('/cart');\r\n        }\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <br />\r\n                <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\"><b>Milkshake Flavors:</b></FormLabel>\r\n                    <br />\r\n                    <RadioGroup aria-label=\"milkflavor\" name=\"milkflavor\" value={value} onChange={handleChange}>\r\n                        {flavortown.map(x=> \r\n                        <FormControlLabel value={x} control={<MaroonRadio />} label={x} />\r\n                        )}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                <button onClick={()=>history.push('/icecreamsize')}>Back</button>\r\n                <button onClick={addmflavor}>Add to Cart</button>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    //ELSE -------------------------------------------------------------------------------\r\n\r\n    const flavors = Menu.icecream[0].flavors;\r\n    console.log(flavors);\r\n    \r\n\r\n    Object.entries(flavors).map(([key,value])=>{\r\n        flavortown.push(value);\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const addflavor=()=>{\r\n        let radios = document.getElementsByName('flavor');\r\n        for (var i = 0, length = radios.length; i < length; i++) {\r\n            if (radios[i].checked) {\r\n                // do whatever you want with the checked radio\r\n                let f = radios[i].value;\r\n                let thing = {flavor: f}\r\n                dispatch({type:'ADD_ORDER', thing })\r\n\r\n                // only one radio can be logically checked, don't check the rest\r\n                break;\r\n            }\r\n        }\r\n        history.push('/icecreamtoppings');\r\n    }\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <br />\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"><b>Flavor Choices:</b></FormLabel>\r\n                <br />\r\n                <RadioGroup aria-label=\"flavor\" name=\"flavor\" value={value} onChange={handleChange}>\r\n                    {flavortown.map(x=> \r\n                    <FormControlLabel value={x} control={<MaroonRadio />} label={x} />\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <button onClick={()=>history.push('/icecreamsize')}>Back</button>\r\n            <button onClick={addflavor}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IcecreamFlavor;","import React,{useState} from 'react';\r\nimport Menu from './Menu.json';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst MaroonRadio = withStyles({\r\n    root: {\r\n      color: \"black\",\r\n      '&$checked': {\r\n        color: red[900],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst IcecreamTypes=()=>{\r\n    let typearr = [];\r\n    const dispatch= useDispatch();\r\n\r\n    const [value, setValue] = useState('');\r\n    const type = Menu.icecream[2].types;\r\n    const history = useHistory();\r\n\r\n    Object.entries(type).map(([key,value])=>{\r\n        typearr.push(value);\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const addtype=()=>{\r\n        let radios = document.getElementsByName('flavor');\r\n        for (var i = 0, length = radios.length; i < length; i++) {\r\n            if (radios[i].checked) {\r\n                // do whatever you want with the checked radio\r\n                let t = radios[i].value;\r\n                let thing = {type: t}\r\n                dispatch({type:'ADD_ORDER', thing });\r\n                //brownie sunday only has 1size so skip right to flavor choice\r\n                if(t === 'Brownie Sundae'){\r\n                    //only one size so skipping ahead\r\n                    let thing = {\"size\":\"Large\",\"price\":7.00};\r\n                    dispatch({type:'ADD_ORDER', thing });\r\n                    history.push('/icecreamflavor');\r\n                }\r\n                else{\r\n                    history.push('/icecreamsize');\r\n                }\r\n                // only one radio can be logically checked, don't check the rest\r\n                break;\r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <br />\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"><b>Icecream Options:</b></FormLabel>\r\n                <br />\r\n                <RadioGroup aria-label=\"flavor\" name=\"flavor\" value={value} onChange={handleChange}>\r\n                    {typearr.map(x=> \r\n                    <FormControlLabel value={x} control={<MaroonRadio />} label={x} />\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <button onClick={addtype}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IcecreamTypes;","import React,{useState} from 'react';\r\nimport Menu from './Menu.json';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst IcecreamToppings=()=>{\r\n\r\n    let toppingarr = [];\r\n    const [state,setState] = useState('');\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const order = useSelector(store => store.order);\r\n    console.log(order[0].type);\r\n\r\n    if(order[0].type === 'Cone' || order[0].type === 'Dish')\r\n    {\r\n        const toppings = Menu.icecream[4].toppings.cones;\r\n        console.log(toppings);\r\n        // Object.entries(toppings).map(([key,value])=>{\r\n        //     toppingarr.push(value);\r\n        // })\r\n        const handleChange = (event) => {\r\n            setState({ ...state, [event.target.name]: event.target.checked });\r\n        };\r\n        const addtoppin=()=>{\r\n            var checkboxes = document.getElementsByName('checkB');\r\n            var vals = [];\r\n\r\n            for (var i=0, n=checkboxes.length;i<n;i++) \r\n            {\r\n                if (checkboxes[i].checked) \r\n                {\r\n                    vals.push(checkboxes[i].value);\r\n                    toppingarr.push({\"tprice\":toppings[i].price});\r\n                }\r\n            }\r\n            //console.log(toppingarr);\r\n            //console.log(vals,'---');\r\n            for(let x=0;x < toppingarr.length;x++){\r\n                let thing = toppingarr[x]; //not x.price bc that's the value\r\n                //console.log(thing, \"in for loop in toppings\");\r\n                dispatch({type:'ADD_ORDER', thing });\r\n            }\r\n\r\n            let thing = {vals}\r\n            dispatch({type:'ADD_ORDER', thing });\r\n            dispatch({type:'ADD_ID' });\r\n            dispatch({type:'ADD_CART', order});\r\n            dispatch({type:'CLEAR_ORDER'});\r\n\r\n        history.push('/cart');\r\n        }\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <h3>Toppings are extra</h3>\r\n                <p>Sprinkles: .25</p>\r\n                <p>Drips: .50</p>\r\n                <p>Other: .50</p>\r\n                {toppings.map(x=>\r\n                            <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                className=\"toppingList\"\r\n                                checked={state.checkedB}\r\n                                onChange={handleChange}\r\n                                name = 'checkB'\r\n                                value={x.top}\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={x.top}\r\n                />)}\r\n                <button onClick={addtoppin}>Add to Cart</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //------------------------------------------------------------------------\r\n\r\n    if(order[0].type === 'Flurry')\r\n    {\r\n        const toppings = Menu.icecream[4].toppings.flurry;\r\n        Object.entries(toppings).map(([key,value])=>{\r\n            toppingarr.push(value);\r\n        })\r\n        const handleChange = (event) => {\r\n            setState({ ...state, [event.target.name]: event.target.checked });\r\n        };\r\n        const addtoppin=()=>{\r\n            var checkboxes = document.getElementsByName('checkB');\r\n            var vals = [];\r\n\r\n            for (var i=0, n=checkboxes.length;i<n;i++) \r\n            {\r\n                if (checkboxes[i].checked) \r\n                {\r\n                    vals.push(checkboxes[i].value);\r\n                }\r\n            }\r\n            let thing = {vals}\r\n            dispatch({type:'ADD_ORDER', thing });\r\n            dispatch({type:'ADD_ID' });\r\n            dispatch({type:'ADD_CART', order});\r\n            dispatch({type:'CLEAR_ORDER'});\r\n\r\n        history.push('/cart');\r\n        }\r\n        return (\r\n            <div>\r\n                {toppingarr.map(x=>\r\n                            <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                className=\"toppingList\"\r\n                                checked={state.checkedB}\r\n                                onChange={handleChange}\r\n                                name = 'checkB'\r\n                                value={x}\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={x}\r\n                />)}\r\n                <button onClick={addtoppin}>Add to Cart</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //--------------------------------------------------------------------------\r\n\r\n    if(order[0].type === 'Sundae' || order[0].type === 'Banana Split' || order[0].type === 'Brownie Sundae')\r\n    {\r\n        let toppingarr = [];\r\n        let toppingarr2 =[];\r\n\r\n        const toppings = Menu.icecream[4].toppings.sundae.normal;\r\n        const toppings2 = Menu.icecream[4].toppings.sundae.checkbox;\r\n\r\n        Object.entries(toppings).map(([key,value])=>{\r\n            toppingarr.push(value);\r\n        })\r\n\r\n        Object.entries(toppings2).map(([key,value])=>{\r\n            toppingarr2.push(value);\r\n        })\r\n\r\n        const handleChange = (event) => {\r\n            setState({ ...state, [event.target.name]: event.target.checked });\r\n        };\r\n\r\n        const addtoppin=()=>{\r\n            var checkboxes = document.getElementsByName('checkB');\r\n            var checkotherboxes = document.getElementsByName('checkA');\r\n            var vals = [];\r\n\r\n            for (let i=0, n=checkboxes.length;i<n;i++) \r\n            {\r\n                if (checkboxes[i].checked) \r\n                {\r\n                    vals.push(checkboxes[i].value);\r\n                }\r\n            }\r\n            for (let j=0, n=checkotherboxes.length;j<n;j++) \r\n            {\r\n                if (checkotherboxes[j].checked) \r\n                {\r\n                    vals.push(checkotherboxes[j].value);\r\n                }\r\n            }\r\n            let thing = vals\r\n            dispatch({type:'ADD_ORDER', thing });\r\n            dispatch({type:'ADD_ID' });\r\n            dispatch({type:'ADD_CART', order});\r\n            dispatch({type:'CLEAR_ORDER'});\r\n\r\n        history.push('/cart');\r\n        }\r\n        return (\r\n            <div>\r\n                <h4>Comes with:</h4>\r\n                {toppingarr2.map(x=>\r\n                            <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                checked={state.checkedA}\r\n                                onChange={handleChange}\r\n                                name=\"checkA\"\r\n                                value={x}\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={x}\r\n                />)}\r\n                <br /> <br />\r\n                <h4>Choose 1 topping(.50 extra per topping)</h4>\r\n                {toppingarr.map(x=>\r\n                            <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                className=\"toppingList\"\r\n                                checked={state.checkedB}\r\n                                onChange={handleChange}\r\n                                name = 'checkB'\r\n                                value={x}\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={x}\r\n                />)}\r\n                <button onClick={addtoppin}>Add to Cart</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default IcecreamToppings;","import React,{useState} from 'react';\r\nimport Menu from './Menu.json';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport './Global.css';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst MaroonRadio = withStyles({\r\n    root: {\r\n      color: \"black\",\r\n      '&$checked': {\r\n        color: red[900],\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst IcecreamSize=()=>{\r\n\r\n    var sizearr = [];\r\n\r\n    const order = useSelector(store => store.order);\r\n    const [value, setValue] = useState('');\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const whatsize=()=>{\r\n        //change size options depending on the type they want\r\n        if(order[0].type === 'Milkshake'){\r\n            var size = Menu.icecream[1].sizes.milkshakes;\r\n        }else if(order[0].type === 'Cone' || order[0].type === 'Dish'){\r\n            var size = Menu.icecream[1].sizes.conesdishes;\r\n        }else if(order[0].type === 'Flurry'){\r\n            var size = Menu.icecream[1].sizes.flurries;\r\n        }else if(order[0].type === 'Sundae'){\r\n            var size = Menu.icecream[1].sizes.sundays;\r\n        }else if(order[0].type === 'Banana Split'){\r\n            var size = Menu.icecream[1].sizes.bananasun;\r\n        }\r\n        //sizearr = [];\r\n        Object.entries(size).map(([key,value])=>{\r\n            console.log(value,'--------------')\r\n            sizearr.push(value);\r\n        })\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const addsize=()=>{\r\n        let radios = document.getElementsByName('size');\r\n        for (var i = 0, length = radios.length; i < length; i++) {\r\n            if (radios[i].checked) {\r\n                // do whatever you want with the checked radio\r\n                let s = radios[i].value;\r\n                let c = sizearr[i].price;\r\n                let thing = {size: s, price: c}\r\n                dispatch({type:'ADD_ORDER', thing })\r\n\r\n                // only one radio can be logically checked, don't check the rest\r\n                break;\r\n            }\r\n        }\r\n        history.push('/icecreamflavor');\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            {whatsize()}\r\n            <br />\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"><b>Size Choices:</b></FormLabel>\r\n                <br />\r\n                <RadioGroup aria-label=\"size\" name=\"size\" onChange={handleChange}>\r\n                    {sizearr.map(x=> \r\n                    <FormControlLabel value={x.size} control={<MaroonRadio />} label={x.size} />\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <button onClick={()=>history.push('/icecreamtype')}>Back</button>\r\n            <button onClick={addsize}>Next</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IcecreamSize;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport red from '@material-ui/core/colors/red';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport {useHistory} from 'react-router-dom';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  barColor:{\r\n      backgroundColor: red[900]\r\n  },\r\n}));\r\n\r\nfunction HomeIcon(props) {\r\n    return (\r\n      <SvgIcon {...props}>\r\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\r\n      </SvgIcon>\r\n    );\r\n}\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let toke = localStorage.getItem('_token');\r\n\r\n  const logout=()=>{\r\n    localStorage.clear();\r\n    history.push('/');\r\n    window.location.reload(); \r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.barColor}>\r\n        <Toolbar>\r\n          <IconButton onClick={()=>history.push('/')} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <HomeIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            The Barn\r\n          </Typography>\r\n          <IconButton onClick={()=>history.push('/cart')} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <ShoppingCartIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n          {toke?<Button color=\"inherit\" onClick={()=>logout()}>Logout</Button>:<Button color=\"inherit\" onClick={()=>history.push('/login')}>Login</Button>}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n//form for either adding a new drink or food item passes to app\r\nconst Login=({getFormData})=>{\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const initialState = {\r\n        username:'',\r\n        password:''\r\n    }\r\n    //state for the inputs\r\n    const [formText,setformText] = useState(initialState);\r\n\r\n    //changes the state of inputs for each typed character\r\n    const handleChange=(e)=>{\r\n        const {name, value} = e.target;\r\n        setformText(formText => ({\r\n            ...formText,\r\n            [name]:value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        getFormData(formText); //DISPATCH HERE INSTEAD?\r\n\r\n        //sets the form back to empty and sends to jobs page\r\n        setformText(initialState);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <h1>Login</h1>\r\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit = {handleSubmit}>\r\n                <TextField id=\"outlined-basic\" name=\"username\"  label =\"Username\" value = {formText.username} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <TextField id=\"outlined-password-input\" type=\"password\" name=\"password\"  label =\"Password\" value = {formText.password} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React,{useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nconst Signup=({signup})=>{\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const initialState = {\r\n        username:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        email:''\r\n    }\r\n    //state for the inputs\r\n    const [formText,setformText] = useState(initialState);\r\n\r\n    //changes the state of inputs for each typed character\r\n    const handleChange=(e)=>{\r\n        const {name, value} = e.target;\r\n        setformText(formText => ({\r\n            ...formText,\r\n            [name]:value\r\n        }))\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        signup(formText); //DISPATCH HERE INSTEAD?\r\n        //sets the form back to empty and sends to jobs page\r\n        setformText(initialState);\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <h1>Signup</h1>\r\n            <form onSubmit = {handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-basic\" name=\"username\"  label =\"Username\" value = {formText.username} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <TextField id=\"outlined-password-input\" type=\"password\" name=\"password\"  label =\"Password\" value = {formText.password} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <TextField id=\"outlined-basic\" name=\"firstName\"  label =\"First Name\" value = {formText.firstName} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <TextField id=\"outlined-basic\" name=\"lastName\"  label =\"Last Name\" value = {formText.lastName} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <TextField id=\"outlined-basic\" name=\"email\"  label =\"Email\" value = {formText.email} variant=\"outlined\" onChange={handleChange} /><br />\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import React,{useState} from 'react';\r\nimport Menu from './Menu.json';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\nconst MaroonRadio = withStyles({\r\n    root: {\r\n      color: \"black\",\r\n      '&$checked': {\r\n        color: red[900],\r\n      },\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color=\"default\" {...props} />);\r\n\r\nconst Smoothie=()=>{\r\n\r\n    const [value, setValue] = useState('');\r\n    const flavor = Menu.smoothie[0].flavors;\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    const addflavor=()=>{\r\n        let radios = document.getElementsByName('flavor');\r\n        for (var i = 0, length = radios.length; i < length; i++) {\r\n            if (radios[i].checked) {\r\n                // do whatever you want with the checked radio\r\n                let f = radios[i].value;\r\n                let thing = {flavor: f, type:'smoothie', price: 5.00, tprice:0.00}\r\n                //why call this twice you might ask? bc with finding the value the first time order is undefined\r\n                //so the second time it will be defined so it will add the values and overwrite the old ones\r\n                dispatch({type:'ADD_ORDER', thing });\r\n                dispatch({type:'ADD_ORDER', thing });\r\n                dispatch({type:'ADD_ID' });\r\n                dispatch({type:'ADD_CART' });\r\n                dispatch({type:'CLEAR_ORDER' });\r\n\r\n                // only one radio can be logically checked, don't check the rest\r\n                break;\r\n            }\r\n        }\r\n        history.push('/cart');\r\n    }\r\n    return (\r\n        <div>\r\n            <br />\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"><b>Smoothie Choices:</b></FormLabel>\r\n                <br />\r\n                <RadioGroup aria-label=\"flavor\" name=\"flavor\" value={value} onChange={handleChange}>\r\n                    {flavor.map(x=> \r\n                    <FormControlLabel value={x.fruit} control={<MaroonRadio />} label={x.fruit} />\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <button onClick={()=>history.push('/')}>Back Home</button>\r\n            <button onClick={addflavor}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Smoothie;","import React,{useState,useEffect} from 'react';\r\nimport APIpage from './APIpage';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n//https://www.npmjs.com/package/qrcode.react\r\nconst QRcode=()=>{\r\n    //add a button that will take them back to the homepage\r\n    const history = useHistory();\r\n\r\n    async function sendQRemail() {\r\n        let noreturn = await APIpage.getQRCodeEmail();\r\n    }\r\n    sendQRemail();\r\n\r\n\r\n    return (\r\n        <div style={{textAlign:\"center\"}}>\r\n            <h1>Thank you for your order! Redeem this QRCode at The Barn for your order to be processed and complete!</h1>\r\n            <p>You will get an attachment containing the QR Code</p>\r\n            <p>Which is a 15character code out of nums and letters add that to a db</p>\r\n            <p>And check that in the db when a scan is complete</p>\r\n            <button onClick={()=>history.push('/')}>Back Home</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QRcode;","import React,{useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport APIpage from './APIpage';\r\nimport './Global.css';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst Adminpg =()=>{\r\n    //get order data, who made the order, QRCode\r\n    const [order, setOrder] = useState([]);\r\n    const [state,setState] = useState('');\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        async function bulkorders() {\r\n            try{\r\n                var orders = await APIpage.getOrders();\r\n                console.log(orders);\r\n                setOrder(orders)\r\n            }catch (e) {\r\n                //aka user isnt logged in so redirect back home cuz they suck\r\n                history.push('/');\r\n            }\r\n        }\r\n        bulkorders();\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n    const rmItems =()=>{\r\n        var checkboxes = document.getElementsByName('checkB');\r\n        var vals = [];\r\n\r\n        for (var i=0, n=checkboxes.length;i<n;i++) \r\n        {\r\n            if (checkboxes[i].checked) \r\n            {\r\n                vals.push(checkboxes[i].id);\r\n            }\r\n        }\r\n        console.log(vals);\r\n        async function takeOff(vals) {\r\n            try{\r\n                var orders = await APIpage.markDone(vals);\r\n                console.log(\"it worked i hope\");\r\n                window.location.reload(); \r\n                //setOrder(orders);\r\n            }catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        takeOff(vals);\r\n        // let rmItems = {vals}\r\n        // dispatch({type:'ADMIN_REMOVE', rmItems });\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{border: '1px solid', margin:'5px', height:'60px',width:'85%'}}>\r\n                <p><b>QRCODE  |  FIRST_NAME  |  LAST_NAME  |  TOTAL_COST  |  TYPE  |  SIZE  |  FLAVOR  |  TOPPING1  |  TOPPING2  |  TOPPING3  |  TOPPING4  |  TOPPING5  |  TOPPING6</b></p>\r\n            </div>\r\n            {/* make this id for order */}\r\n            {order.map(x=>\r\n                <div id = {x.orderitemid} style={{border: '1px solid', margin:'5px', height:'90px',width:'85%'}}> \r\n                    <p>{x.qrcode}--{x.firstname}--{x.lastname}--{x.totalcost}--{x.type}--{x.size}--{x.flavor}--{x.topping1 || \"\"}--{x.topping2 || \"\"}--{x.topping3 || \"\"}--{x.topping4 || \"\"}--{x.topping5 || \"\"}--{x.topping6 || \"\"}</p>\r\n                    <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                id = {x.orderitemid}\r\n                                className=\"OrderList\"\r\n                                checked={state.checkedB}\r\n                                onChange={handleChange}\r\n                                name = 'checkB'\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={x.orderitemid}\r\n                    />\r\n                </div>\r\n            )}\r\n            <button onClick={rmItems}>Remove Checked Items</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Adminpg;\r\n\r\n","import React,{useState} from 'react';\r\nimport {BrowserRouter,Route, Switch, Redirect} from 'react-router-dom';\r\nimport Home from './home';\r\nimport About from './about';\r\nimport Singlefood from './Singlefood';\r\nimport Singleicecream from './Singlecream';\r\nimport Cart from './Cart';\r\nimport IcecreamFlavor from './IcecreamFlavor';\r\nimport IcecreamTypes from './IcecreamTypes';\r\nimport IcecreamToppings from './IcecreamToppings';\r\nimport IcecreamSize from './IcecreamSize';\r\nimport Foods from './Foods'\r\nimport Navbar from './Navbar';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport Smoothies from './Smoothie';\r\nimport APIpage from './APIpage';\r\nimport QRcode from './QRCode';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Adminpg from './Adminpg';\r\n\r\n\r\nconst Router=()=>{\r\n    //const history = useHistory();\r\n    const [userinfo,setUserinfo] = useState({});\r\n    const getFormData=(logobj)=>{\r\n        //prob add a try catch for all asyncness\r\n        async function login(logobj) {\r\n          const {username,password} = logobj;\r\n          let obj = {username:`${username}`,password:`${password}`}\r\n          let log= await APIpage.login(obj);\r\n          localStorage.setItem('_token', log.token);\r\n          setUserinfo(username);\r\n          return log;\r\n        }\r\n        login(logobj);\r\n    }\r\n    async function signup(logobj) {\r\n        let {username} = logobj;\r\n        let reg= await APIpage.register(logobj);\r\n        localStorage.setItem('_token', reg.token);\r\n        setUserinfo(username);\r\n        return reg;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n\r\n                <Navbar />\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/\" >\r\n                        <Home />\r\n                    </Route>\r\n                    <Route exact path=\"/admin\" >\r\n                        <Adminpg />\r\n                    </Route>\r\n                    <Route exact path=\"/login\" >\r\n                        <Login getFormData={getFormData} />\r\n                    </Route>\r\n                    <Route exact path=\"/signup\" >\r\n                        <Signup signup={signup} />\r\n                    </Route>\r\n                    <Route exact path=\"/about\" >\r\n                        <About />\r\n                    </Route>\r\n                    <Route exact path=\"/cart\" >\r\n                        <Cart />\r\n                    </Route>\r\n                    <Route exact path=\"/food/:food\">\r\n                        <Singlefood />\r\n                    </Route>\r\n                    <Route exact path=\"/icecream/:cream\" >\r\n                        <Singleicecream /> \r\n                    </Route>\r\n                    <Route exact path=\"/food\">\r\n                        <Foods />\r\n                    </Route>\r\n                    <Route exact path=\"/icecreamtype\" >\r\n                        <IcecreamTypes /> \r\n                    </Route>\r\n                    <Route exact path=\"/icecreamflavor\" >\r\n                        <IcecreamFlavor /> \r\n                    </Route>\r\n                    <Route exact path=\"/icecreamsize\" >\r\n                        <IcecreamSize /> \r\n                    </Route>\r\n                    <Route exact path=\"/icecreamtoppings\" >\r\n                        <IcecreamToppings /> \r\n                    </Route>\r\n                    <Route exact path=\"/smoothie\" >\r\n                        <Smoothies /> \r\n                    </Route>\r\n                    <Route exact path=\"/qrcode\" >\r\n                        <QRcode /> \r\n                    </Route>\r\n                        <Redirect to=\"/\" />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Router;","import './App.css';\nimport Router from './Router';\n\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = { cart:[], order:[], admin:[] };\r\nvar totalprice = {\"topprice\": \"\"};\r\n\r\nfunction rootReducer(state=INITIAL_STATE,action){\r\n    switch(action.type){\r\n        case 'ADD_ORDER':\r\n            console.log(action.thing,\"in rootreduce\");\r\n            //if its an array turn it into an obj and add it to order\r\n            if(Array.isArray(action.thing.vals)){\r\n                let arraytoObj = {...action.thing.vals}\r\n                return { ...state,\r\n                    order: [{...state.order[0], ...arraytoObj}]\r\n                    }\r\n            }\r\n            //adding up price if there is price in a try catch bc it will break program if state.order[0].price is undefined\r\n            try{\r\n                let sizeprice = state.order[0].price;\r\n                //let newprice= action.thing;\r\n                let prevVal = totalprice.topprice;\r\n                let newtoppingprice = action.thing.tprice;\r\n                if(prevVal === \"\"){\r\n                    prevVal = 0;\r\n                }\r\n                //not null meaing if they both exist to add those values\r\n                if(sizeprice!=null && newtoppingprice !=null){\r\n                    let v = parseFloat(newtoppingprice) + parseFloat(prevVal);\r\n                    console.log(newtoppingprice, '+', prevVal, '=', v);\r\n                    totalprice.topprice = v;\r\n                }\r\n            }catch{\r\n                console.log(\"has no vlaue\");\r\n            }\r\n            console.log(totalprice,'TOTAL');\r\n            //state.order is what it has in it so far flavor,size,type. action.thing is whats being added\r\n            //and totalprice is any additional toppings price that are being added\r\n            return { ...state,\r\n                order: [{...state.order[0], ...action.thing,...totalprice}]\r\n                }\r\n        case 'CLEAR_ORDER':\r\n            //set totalprice aka toppings to zero\r\n            totalprice = {\"topprice\": \"\"};\r\n            return { ...state,\r\n                order: []\r\n                }\r\n        case 'GET_CART':\r\n            return { ...state, cart: action.data }\r\n\r\n        case 'ADD_ID':\r\n            //give it an ID this is a very bad way to do it but for now will work\r\n            let randnum = Math.floor(Math.random() * 10000)\r\n            let id = {\"id\": randnum};\r\n            return { ...state,\r\n                order: [{...state.order[0], ...id}]\r\n                }\r\n        case 'ADD_CART':\r\n            return { ...state.cart,\r\n                cart: [...state.cart,...state.order]\r\n                }\r\n\r\n        case 'DELETE_CART_ITEM':\r\n            console.log(action)\r\n            return { ...state,\r\n                cart: state.cart.filter(x=>x.id!==action.id)\r\n                }\r\n        case 'DELETE_CART':\r\n            return { ...state,\r\n                cart: []\r\n            }\r\n\r\n        // case 'ADMIN_REMOVE':\r\n        //     return {...state,\r\n        //         action.rmItems\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport rootReducer from './rootReducer';\nimport {BrowserRouter} from 'react-router-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)));\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}